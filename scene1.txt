package com.shiny3d.wallpapers;

import android.app.AlertDialog;
import android.content.Context;
import android.os.Handler;
import android.os.Looper;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.bumptech.glide.Glide;

import java.net.HttpURLConnection;
import java.net.URL;
import java.util.List;

public class SceneAdapter extends RecyclerView.Adapter<SceneAdapter.SceneViewHolder> {

    private List<SceneItem> sceneList;
    private Context context;
    private OnSceneClickListener listener;

    public interface OnSceneClickListener {
        void onSceneClick(SceneItem scene);
    }

    public SceneAdapter(Context context, List<SceneItem> sceneList, OnSceneClickListener listener) {
        this.context = context;
        this.sceneList = sceneList;
        this.listener = listener;
    }

    @NonNull
    @Override
    public SceneViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(context).inflate(R.layout.scene_card, parent, false);
        return new SceneViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull SceneViewHolder holder, int position) {
        SceneItem item = sceneList.get(position);
        Glide.with(context).load(item.getPreviewUrl()).into(holder.previewImage);

        holder.itemView.setOnClickListener(v -> showSceneDialog(v.getContext(), item));
    }

    @Override
    public int getItemCount() {
        return sceneList.size();
    }

    public static class SceneViewHolder extends RecyclerView.ViewHolder {
        ImageView previewImage;

        public SceneViewHolder(@NonNull View itemView) {
            super(itemView);
            previewImage = itemView.findViewById(R.id.previewImage);
        }
    }

    private void showSceneDialog(Context context, SceneItem scene) {
        // Получение размера файла в фоновом потоке
        new Thread(() -> {
            try {
                URL url = new URL(scene.getSceneUrl());
                HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                connection.setRequestMethod("HEAD");
                connection.connect();

                int length = connection.getContentLength();
                connection.disconnect();

                String sizeFormatted = android.text.format.Formatter.formatFileSize(context, length);

                new Handler(Looper.getMainLooper()).post(() -> {
                    new AlertDialog.Builder(context)
                        .setTitle(scene.getName())
                        .setMessage("Размер файла: " + sizeFormatted)
                        .setPositiveButton("Скачать", (dialog, which) -> {
                            // Заглушка — на следующем этапе добавим скачивание
                            Toast.makeText(context, "Скачивание сцены...", Toast.LENGTH_SHORT).show();
                        })
                        .setNegativeButton("Отмена", null)
                        .show();
                });
            } catch (Exception e) {
                e.printStackTrace();
                new Handler(Looper.getMainLooper()).post(() ->
                    Toast.makeText(context, "Ошибка при получении информации о сцене", Toast.LENGTH_SHORT).show()
                );
            }
        }).start();
    }
}

package com.shiny3d.wallpapers;

import android.app.AlertDialog;
import android.content.Context;
import android.os.Handler;
import android.os.Looper;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.bumptech.glide.Glide;

import java.net.HttpURLConnection;
import java.net.URL;
import java.util.List;

public class SceneAdapter extends RecyclerView.Adapter<SceneAdapter.SceneViewHolder> {

    private List<SceneItem> sceneList;
    private Context context;
    private OnSceneClickListener listener;

    public interface OnSceneClickListener {
        void onSceneClick(SceneItem scene);
    }

    public SceneAdapter(Context context, List<SceneItem> sceneList, OnSceneClickListener listener) {
        this.context = context;
        this.sceneList = sceneList;
        this.listener = listener;
    }

    @NonNull
    @Override
    public SceneViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(context).inflate(R.layout.scene_card, parent, false);
        return new SceneViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull SceneViewHolder holder, int position) {
        SceneItem item = sceneList.get(position);
        Glide.with(context).load(item.getPreviewUrl()).into(holder.previewImage);

        holder.itemView.setOnClickListener(v -> showSceneDialog(v.getContext(), item));
    }

    @Override
    public int getItemCount() {
        return sceneList.size();
    }

    public static class SceneViewHolder extends RecyclerView.ViewHolder {
        ImageView previewImage;

        public SceneViewHolder(@NonNull View itemView) {
            super(itemView);
            previewImage = itemView.findViewById(R.id.previewImage);
        }
    }

    private void showSceneDialog(Context context, SceneItem scene) {
        // Получение размера файла в фоновом потоке
        new Thread(() -> {
            try {
                URL url = new URL(scene.getSceneUrl());
                HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                connection.setRequestMethod("HEAD");
                connection.connect();

                int length = connection.getContentLength();
                connection.disconnect();

                String sizeFormatted = android.text.format.Formatter.formatFileSize(context, length);

                new Handler(Looper.getMainLooper()).post(() -> {
                    new AlertDialog.Builder(context)
                        .setTitle(scene.getName())
                        .setMessage("Размер файла: " + sizeFormatted)
                        .setPositiveButton("Скачать", (dialog, which) -> {
                            // Заглушка — на следующем этапе добавим скачивание
                            Toast.makeText(context, "Скачивание сцены...", Toast.LENGTH_SHORT).show();
                        })
                        .setNegativeButton("Отмена", null)
                        .show();
                });
            } catch (Exception e) {
                e.printStackTrace();
                new Handler(Looper.getMainLooper()).post(() ->
                    Toast.makeText(context, "Ошибка при получении информации о сцене", Toast.LENGTH_SHORT).show()
                );
            }
        }).start();
    }
}

package com.shiny3d.wallpapers;

import android.app.AlertDialog;
import android.content.Context;
import android.os.Handler;
import android.os.Looper;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.bumptech.glide.Glide;

import java.net.HttpURLConnection;
import java.net.URL;
import java.util.List;

public class SceneAdapter extends RecyclerView.Adapter<SceneAdapter.SceneViewHolder> {

    private List<SceneItem> sceneList;
    private Context context;
    private OnSceneClickListener listener;

    public interface OnSceneClickListener {
        void onSceneClick(SceneItem scene);
    }

    public SceneAdapter(Context context, List<SceneItem> sceneList, OnSceneClickListener listener) {
        this.context = context;
        this.sceneList = sceneList;
        this.listener = listener;
    }

    @NonNull
    @Override
    public SceneViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(context).inflate(R.layout.scene_card, parent, false);
        return new SceneViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull SceneViewHolder holder, int position) {
        SceneItem item = sceneList.get(position);
        Glide.with(context).load(item.getPreviewUrl()).into(holder.previewImage);

        holder.itemView.setOnClickListener(v -> showSceneDialog(v.getContext(), item));
    }

    @Override
    public int getItemCount() {
        return sceneList.size();
    }

    public static class SceneViewHolder extends RecyclerView.ViewHolder {
        ImageView previewImage;

        public SceneViewHolder(@NonNull View itemView) {
            super(itemView);
            previewImage = itemView.findViewById(R.id.previewImage);
        }
    }

    private void showSceneDialog(Context context, SceneItem scene) {
        // Получение размера файла в фоновом потоке
        new Thread(() -> {
            try {
                URL url = new URL(scene.getSceneUrl());
                HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                connection.setRequestMethod("HEAD");
                connection.connect();

                int length = connection.getContentLength();
                connection.disconnect();

                String sizeFormatted = android.text.format.Formatter.formatFileSize(context, length);

                new Handler(Looper.getMainLooper()).post(() -> {
                    new AlertDialog.Builder(context)
                        .setTitle(scene.getName())
                        .setMessage("Размер файла: " + sizeFormatted)
                        .setPositiveButton("Скачать", (dialog, which) -> {
                            // Заглушка — на следующем этапе добавим скачивание
                            Toast.makeText(context, "Скачивание сцены...", Toast.LENGTH_SHORT).show();
                        })
                        .setNegativeButton("Отмена", null)
                        .show();
                });
            } catch (Exception e) {
                e.printStackTrace();
                new Handler(Looper.getMainLooper()).post(() ->
                    Toast.makeText(context, "Ошибка при получении информации о сцене", Toast.LENGTH_SHORT).show()
                );
            }
        }).start();
    }
}

package com.shiny3d.wallpapers;

import android.app.AlertDialog;
import android.content.Context;
import android.os.Handler;
import android.os.Looper;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.bumptech.glide.Glide;

import java.net.HttpURLConnection;
import java.net.URL;
import java.util.List;

public class SceneAdapter extends RecyclerView.Adapter<SceneAdapter.SceneViewHolder> {

    private List<SceneItem> sceneList;
    private Context context;
    private OnSceneClickListener listener;

    public interface OnSceneClickListener {
        void onSceneClick(SceneItem scene);
    }

    public SceneAdapter(Context context, List<SceneItem> sceneList, OnSceneClickListener listener) {
        this.context = context;
        this.sceneList = sceneList;
        this.listener = listener;
    }

    @NonNull
    @Override
    public SceneViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(context).inflate(R.layout.scene_card, parent, false);
        return new SceneViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull SceneViewHolder holder, int position) {
        SceneItem item = sceneList.get(position);
        Glide.with(context).load(item.getPreviewUrl()).into(holder.previewImage);

        holder.itemView.setOnClickListener(v -> showSceneDialog(v.getContext(), item));
    }

    @Override
    public int getItemCount() {
        return sceneList.size();
    }

    public static class SceneViewHolder extends RecyclerView.ViewHolder {
        ImageView previewImage;

        public SceneViewHolder(@NonNull View itemView) {
            super(itemView);
            previewImage = itemView.findViewById(R.id.previewImage);
        }
    }

    private void showSceneDialog(Context context, SceneItem scene) {
        // Получение размера файла в фоновом потоке
        new Thread(() -> {
            try {
                URL url = new URL(scene.getSceneUrl());
                HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                connection.setRequestMethod("HEAD");
                connection.connect();

                int length = connection.getContentLength();
                connection.disconnect();

                String sizeFormatted = android.text.format.Formatter.formatFileSize(context, length);

                new Handler(Looper.getMainLooper()).post(() -> {
                    new AlertDialog.Builder(context)
                        .setTitle(scene.getName())
                        .setMessage("Размер файла: " + sizeFormatted)
                        .setPositiveButton("Скачать", (dialog, which) -> {
                            // Заглушка — на следующем этапе добавим скачивание
                            Toast.makeText(context, "Скачивание сцены...", Toast.LENGTH_SHORT).show();
                        })
                        .setNegativeButton("Отмена", null)
                        .show();
                });
            } catch (Exception e) {
                e.printStackTrace();
                new Handler(Looper.getMainLooper()).post(() ->
                    Toast.makeText(context, "Ошибка при получении информации о сцене", Toast.LENGTH_SHORT).show()
                );
            }
        }).start();
    }
}

package com.shiny3d.wallpapers;

import android.app.AlertDialog;
import android.content.Context;
import android.os.Handler;
import android.os.Looper;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.bumptech.glide.Glide;

import java.net.HttpURLConnection;
import java.net.URL;
import java.util.List;

public class SceneAdapter extends RecyclerView.Adapter<SceneAdapter.SceneViewHolder> {

    private List<SceneItem> sceneList;
    private Context context;
    private OnSceneClickListener listener;

    public interface OnSceneClickListener {
        void onSceneClick(SceneItem scene);
    }

    public SceneAdapter(Context context, List<SceneItem> sceneList, OnSceneClickListener listener) {
        this.context = context;
        this.sceneList = sceneList;
        this.listener = listener;
    }

    @NonNull
    @Override
    public SceneViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(context).inflate(R.layout.scene_card, parent, false);
        return new SceneViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull SceneViewHolder holder, int position) {
        SceneItem item = sceneList.get(position);
        Glide.with(context).load(item.getPreviewUrl()).into(holder.previewImage);

        holder.itemView.setOnClickListener(v -> showSceneDialog(v.getContext(), item));
    }

    @Override
    public int getItemCount() {
        return sceneList.size();
    }

    public static class SceneViewHolder extends RecyclerView.ViewHolder {
        ImageView previewImage;

        public SceneViewHolder(@NonNull View itemView) {
            super(itemView);
            previewImage = itemView.findViewById(R.id.previewImage);
        }
    }

    private void showSceneDialog(Context context, SceneItem scene) {
        // Получение размера файла в фоновом потоке
        new Thread(() -> {
            try {
                URL url = new URL(scene.getSceneUrl());
                HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                connection.setRequestMethod("HEAD");
                connection.connect();

                int length = connection.getContentLength();
                connection.disconnect();

                String sizeFormatted = android.text.format.Formatter.formatFileSize(context, length);

                new Handler(Looper.getMainLooper()).post(() -> {
                    new AlertDialog.Builder(context)
                        .setTitle(scene.getName())
                        .setMessage("Размер файла: " + sizeFormatted)
                        .setPositiveButton("Скачать", (dialog, which) -> {
                            // Заглушка — на следующем этапе добавим скачивание
                            Toast.makeText(context, "Скачивание сцены...", Toast.LENGTH_SHORT).show();
                        })
                        .setNegativeButton("Отмена", null)
                        .show();
                });
            } catch (Exception e) {
                e.printStackTrace();
                new Handler(Looper.getMainLooper()).post(() ->
                    Toast.makeText(context, "Ошибка при получении информации о сцене", Toast.LENGTH_SHORT).show()
                );
            }
        }).start();
    }
}

package com.shiny3d.wallpapers;

import android.app.AlertDialog;
import android.content.Context;
import android.os.Handler;
import android.os.Looper;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.bumptech.glide.Glide;

import java.net.HttpURLConnection;
import java.net.URL;
import java.util.List;

public class SceneAdapter extends RecyclerView.Adapter<SceneAdapter.SceneViewHolder> {

    private List<SceneItem> sceneList;
    private Context context;
    private OnSceneClickListener listener;

    public interface OnSceneClickListener {
        void onSceneClick(SceneItem scene);
    }

    public SceneAdapter(Context context, List<SceneItem> sceneList, OnSceneClickListener listener) {
        this.context = context;
        this.sceneList = sceneList;
        this.listener = listener;
    }

    @NonNull
    @Override
    public SceneViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(context).inflate(R.layout.scene_card, parent, false);
        return new SceneViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull SceneViewHolder holder, int position) {
        SceneItem item = sceneList.get(position);
        Glide.with(context).load(item.getPreviewUrl()).into(holder.previewImage);

        holder.itemView.setOnClickListener(v -> showSceneDialog(v.getContext(), item));
    }

    @Override
    public int getItemCount() {
        return sceneList.size();
    }

    public static class SceneViewHolder extends RecyclerView.ViewHolder {
        ImageView previewImage;

        public SceneViewHolder(@NonNull View itemView) {
            super(itemView);
            previewImage = itemView.findViewById(R.id.previewImage);
        }
    }

    private void showSceneDialog(Context context, SceneItem scene) {
        // Получение размера файла в фоновом потоке
        new Thread(() -> {
            try {
                URL url = new URL(scene.getSceneUrl());
                HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                connection.setRequestMethod("HEAD");
                connection.connect();

                int length = connection.getContentLength();
                connection.disconnect();

                String sizeFormatted = android.text.format.Formatter.formatFileSize(context, length);

                new Handler(Looper.getMainLooper()).post(() -> {
                    new AlertDialog.Builder(context)
                        .setTitle(scene.getName())
                        .setMessage("Размер файла: " + sizeFormatted)
                        .setPositiveButton("Скачать", (dialog, which) -> {
                            // Заглушка — на следующем этапе добавим скачивание
                            Toast.makeText(context, "Скачивание сцены...", Toast.LENGTH_SHORT).show();
                        })
                        .setNegativeButton("Отмена", null)
                        .show();
                });
            } catch (Exception e) {
                e.printStackTrace();
                new Handler(Looper.getMainLooper()).post(() ->
                    Toast.makeText(context, "Ошибка при получении информации о сцене", Toast.LENGTH_SHORT).show()
                );
            }
        }).start();
    }
}

package com.shiny3d.wallpapers;

import android.app.AlertDialog;
import android.content.Context;
import android.os.Handler;
import android.os.Looper;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.bumptech.glide.Glide;

import java.net.HttpURLConnection;
import java.net.URL;
import java.util.List;

public class SceneAdapter extends RecyclerView.Adapter<SceneAdapter.SceneViewHolder> {

    private List<SceneItem> sceneList;
    private Context context;
    private OnSceneClickListener listener;

    public interface OnSceneClickListener {
        void onSceneClick(SceneItem scene);
    }

    public SceneAdapter(Context context, List<SceneItem> sceneList, OnSceneClickListener listener) {
        this.context = context;
        this.sceneList = sceneList;
        this.listener = listener;
    }

    @NonNull
    @Override
    public SceneViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(context).inflate(R.layout.scene_card, parent, false);
        return new SceneViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull SceneViewHolder holder, int position) {
        SceneItem item = sceneList.get(position);
        Glide.with(context).load(item.getPreviewUrl()).into(holder.previewImage);

        holder.itemView.setOnClickListener(v -> showSceneDialog(v.getContext(), item));
    }

    @Override
    public int getItemCount() {
        return sceneList.size();
    }

    public static class SceneViewHolder extends RecyclerView.ViewHolder {
        ImageView previewImage;

        public SceneViewHolder(@NonNull View itemView) {
            super(itemView);
            previewImage = itemView.findViewById(R.id.previewImage);
        }
    }

    private void showSceneDialog(Context context, SceneItem scene) {
        // Получение размера файла в фоновом потоке
        new Thread(() -> {
            try {
                URL url = new URL(scene.getSceneUrl());
                HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                connection.setRequestMethod("HEAD");
                connection.connect();

                int length = connection.getContentLength();
                connection.disconnect();

                String sizeFormatted = android.text.format.Formatter.formatFileSize(context, length);

                new Handler(Looper.getMainLooper()).post(() -> {
                    new AlertDialog.Builder(context)
                        .setTitle(scene.getName())
                        .setMessage("Размер файла: " + sizeFormatted)
                        .setPositiveButton("Скачать", (dialog, which) -> {
                            // Заглушка — на следующем этапе добавим скачивание
                            Toast.makeText(context, "Скачивание сцены...", Toast.LENGTH_SHORT).show();
                        })
                        .setNegativeButton("Отмена", null)
                        .show();
                });
            } catch (Exception e) {
                e.printStackTrace();
                new Handler(Looper.getMainLooper()).post(() ->
                    Toast.makeText(context, "Ошибка при получении информации о сцене", Toast.LENGTH_SHORT).show()
                );
            }
        }).start();
    }
}

